{"ast":null,"code":"var _jsxFileName = \"/Users/nirmalvn/filbytes_dev/Client/src/context.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestContext = /*#__PURE__*/createContext({\n  information_for_inv: [],\n  setInformationHandler: information_for_inv => {}\n});\nconst TestContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // we set the email to be the global variable so that it can be used to track the \n  // information of that particular user who uses their email to login . \n  // so that we will send the email to the  endpoints url \n\n  const [information_for_inv, setInformation] = useState([]);\n  const [numberofgooseCount, setGooseCount] = useState();\n  const setLoginHandler = isLogged => setLoggedIn(isLogged);\n  const setGooseCountHandler = numberofgooseCount => setGooseCount(numberofgooseCount);\n  return /*#__PURE__*/_jsxDEV(TestContext.Provider, {\n    value: {\n      isLogged,\n      setLoginHandler,\n      email,\n      setEmailHandler,\n      numberofgooseCount,\n      setGooseCountHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TestContextProvider, \"hKJOwhNmWoiuNOYGyvGUoYWg9TA=\");\n_c = TestContextProvider;\nexport default TestContextProvider;\nvar _c;\n$RefreshReg$(_c, \"TestContextProvider\");","map":{"version":3,"names":["React","useState","createContext","TestContext","information_for_inv","setInformationHandler","TestContextProvider","children","setInformation","numberofgooseCount","setGooseCount","setLoginHandler","isLogged","setLoggedIn","setGooseCountHandler","email","setEmailHandler"],"sources":["/Users/nirmalvn/filbytes_dev/Client/src/context.js"],"sourcesContent":["import React, {useState,  createContext} from \"react\"\n\nexport const TestContext=createContext({\n    \n\n    information_for_inv:[],\n    setInformationHandler:(information_for_inv)=>{}, \n\n})\nconst TestContextProvider=({\n    children\n})=>{\n    // we set the email to be the global variable so that it can be used to track the \n// information of that particular user who uses their email to login . \n// so that we will send the email to the  endpoints url \n   \n    \n   \n    const [information_for_inv, setInformation]=useState([]);\n\n    const [numberofgooseCount,setGooseCount]=useState();\n    \n    const setLoginHandler=(isLogged)=>setLoggedIn(isLogged);\n    \n   \n    \n    const setGooseCountHandler=(numberofgooseCount)=>setGooseCount(numberofgooseCount);\n\n    return (\n    <TestContext.Provider value={{isLogged,setLoginHandler,email,setEmailHandler,\n    numberofgooseCount, setGooseCountHandler }}>\n        {children}\n    </TestContext.Provider>\n);\n};\nexport default TestContextProvider"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAGC,aAAa,QAAO,OAAO;AAAA;AAErD,OAAO,MAAMC,WAAW,gBAACD,aAAa,CAAC;EAGnCE,mBAAmB,EAAC,EAAE;EACtBC,qBAAqB,EAAED,mBAAmB,IAAG,CAAC;AAElD,CAAC,CAAC;AACF,MAAME,mBAAmB,GAAC,QAEtB;EAAA;EAAA,IAFuB;IACvBC;EACJ,CAAC;EACG;EACJ;EACA;;EAII,MAAM,CAACH,mBAAmB,EAAEI,cAAc,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAM,CAACQ,kBAAkB,EAACC,aAAa,CAAC,GAACT,QAAQ,EAAE;EAEnD,MAAMU,eAAe,GAAEC,QAAQ,IAAGC,WAAW,CAACD,QAAQ,CAAC;EAIvD,MAAME,oBAAoB,GAAEL,kBAAkB,IAAGC,aAAa,CAACD,kBAAkB,CAAC;EAElF,oBACA,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACG,QAAQ;MAACD,eAAe;MAACI,KAAK;MAACC,eAAe;MAC5EP,kBAAkB;MAAEK;IAAqB,CAAE;IAAA,UACtCP;EAAQ;IAAA;IAAA;IAAA;EAAA,QACU;AAE3B,CAAC;AAAC,GAzBID,mBAAmB;AAAA,KAAnBA,mBAAmB;AA0BzB,eAAeA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}